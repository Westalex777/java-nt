<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.example</groupId>
		<artifactId>app-nt-modules</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<artifactId>app-nt-mock</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>mock</name>
	<description>app-nt-mock</description>
	<packaging>jar</packaging>

	<properties>
		<grpc.version>1.72.0</grpc.version>
		<protobuf-java.version>4.30.2</protobuf-java.version>
		<spring-grpc.version>0.9.0</spring-grpc.version>
		<protobuf.version>3.25.0</protobuf.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
		<dependency>
			<groupId>net.devh</groupId>
			<artifactId>grpc-server-spring-boot-starter</artifactId>
			<version>2.15.0.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>chat.giga</groupId>
			<artifactId>spring-ai-starter-model-gigachat</artifactId>
			<version>1.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.grpc</groupId>
			<artifactId>spring-grpc-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.grpc</groupId>
				<artifactId>spring-grpc-dependencies</artifactId>
				<version>${spring-grpc.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!-- Отключаем стандартный deploy плагин -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>default-deploy</id>
						<phase>none</phase>  <!-- Отключаем стандартный deploy -->
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>io.github.ascopes</groupId>
				<artifactId>protobuf-maven-plugin</artifactId>
				<version>3.4.2</version>
				<configuration>
					<protocVersion>${protobuf-java.version}</protocVersion>
					<binaryMavenPlugins>
						<binaryMavenPlugin>
							<groupId>io.grpc</groupId>
							<artifactId>protoc-gen-grpc-java</artifactId>
							<version>${grpc.version}</version>
							<options>@generated=omit</options>
						</binaryMavenPlugin>
					</binaryMavenPlugins>
				</configuration>
				<executions>
					<execution>
						<id>generate</id>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Запускаем docker-compose при фазе deploy -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>docker-compose-build</id>
						<phase>install</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>cmd</executable>
							<arguments>
								<argument>/c</argument>
								<argument>docker-compose build --no-cache ${project.name}</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>docker-compose-up</id>
						<phase>deploy</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>cmd</executable>
							<arguments>
								<argument>/c</argument>
								<argument>docker-compose up -d --force-recreate ${project.name}</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

</project>
